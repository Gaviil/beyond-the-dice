.containerCharacters {
  display: grid;
  grid-gap: 20px;
  grid-template-areas:
    "listCharacters"
    "newCharacterForm";
}
.listCharacters {
  grid-area: listCharacters;
}
.newCharacterForm {
  grid-area: newCharacterForm;
}
.defaultInformation {
  grid-area: defaultInformation;
}
.skillsContainer {
  grid-area: skillsContainer;
  display: grid;
  justify-content: flex-start;
  grid-template-areas:
    "createCharacterButton"
    "skills";
}
.createCharacterButton {
  grid-area: createCharacterButton;
}
.characteristics {
  grid-area: characteristics;
  max-width: 215px;
}
.characteristics label {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
.textAreaDescription {
  height: 100px;
  margin: 5px 0;
  width: calc(100% - 5px);
  border-left: 1px solid #353535;
  display: block;
}
input[type=text].nameNewCharacter {
  margin: 5px 0px;
  width: calc(100% - 5px);
  display: block;
}
.list {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}
.list li {
  margin: 10px;
}
.skillRow {
  display: flex;
  justify-content: space-between;
}
.skillRow div {
  margin-left: 20px;
}
.skillRow label input {
  min-width: 25px;
}
.newCharacterForm {
  display: grid;
  grid-gap: 20px;
  grid-template-areas:
    "listCharacters"
    "newCharacterForm";
}
.formNewCharacter {
  display: grid;
  grid-gap: 20px;
  grid-template-areas:
    "defaultInformation"
    "characteristics"
    "skillsContainer";
}
.inputCharacteristics, .inputSkills {
  width: 100px;
}
@media (min-width: 500px) {
  .containerCharacters {
    grid-template-areas:
      "listCharacters"
      "newCharacterForm";
  }
  .formNewCharacter {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 20px;
    grid-template-areas:
      "defaultInformation  skillsContainer"
      "characteristics skillsContainer"
      "characteristics skillsContainer";
  }
  .textAreaDescription {
    max-height: 100px;
    min-height: 100px;
    max-width: 490px;
    min-width: 490px;
  }
  input[type=text].nameNewCharacter {
    margin: 5px 0px;
    width: auto;
    display: inline-block;
  }
  .skillsContainer {
    justify-content: flex-start;
  }
}
@media (min-width: 700px) {
  .containerCharacters {
    grid-gap: 20px;
    grid-template-areas:
      "listCharacters"
      "newCharacterForm";
   }
   .formNewCharacter {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 20px;
  }
  .textAreaDescription {
    max-height: 100px;
    min-height: 100px;
    max-width: 490px;
    min-width: 490px;
  }
  input[type=text].nameNewCharacter {
    margin: 5px 0px;
    width: auto;
    display: inline-block;
  }
}
